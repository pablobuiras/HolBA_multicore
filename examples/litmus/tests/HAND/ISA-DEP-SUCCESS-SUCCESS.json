{"arch":"RISCV","name":"ISA-DEP-SUCCESS-SUCCESS","regs":["(K NONE)⦇\"x14\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x12\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x13\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x10\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x11\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x19\" ↦ SOME (BVal_Imm (Imm64 a)); \"x18\" ↦ SOME (BVal_Imm (Imm64 z)); \"x9\" ↦ SOME (BVal_Imm (Imm64 y)); \"x8\" ↦ SOME (BVal_Imm (Imm64 x))⦈","(K NONE)⦇\"x13\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x18\" ↦ SOME (BVal_Imm (Imm64 z)); \"x8\" ↦ SOME (BVal_Imm (Imm64 x))⦈"],"mem":"[]","progs":["BirProgram [<|bb_label := BL_Address_HC (Imm64 0w) \"00043503 (ld a0,0(s0))\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 3 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w)))); BStmt_Assign (BVar \"x10\" (BType_Imm Bit64)) (BExp_Load (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) BEnd_LittleEndian Bit64)]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 4w)))|>; <|bb_label := BL_Address_HC (Imm64 4w) \"1004B5AF\"; bb_mc_tags := SOME <|mc_atomic := F; mc_acq := F; mc_rel := F|>; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 3 (BExp_Den (BVar \"x9\" (BType_Imm Bit64)))); BStmt_Assign (BVar \"x11\" (BType_Imm Bit64)) (BExp_Load (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x9\" (BType_Imm Bit64))) BEnd_LittleEndian Bit64); BStmt_Assign (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8_Z\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x9\" (BType_Imm Bit64))) BEnd_LittleEndian (BExp_Const (Imm64 0x101010101010101w)))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 8w)))|>; <|bb_label := BL_Address_HC (Imm64 8w) \"18A4B62F\"; bb_mc_tags := SOME <|mc_atomic := F; mc_acq := F; mc_rel := F|>; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 3 (BExp_Den (BVar \"x9\" (BType_Imm Bit64)))); BStmt_Assert (BExp_unchanged_mem_interval_distinct Bit64 0 1000 (BExp_Den (BVar \"x9\" (BType_Imm Bit64))) 8); BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_IfThenElse (BExp_BinPred BIExp_Equal (BExp_Load (BExp_Den (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x9\" (BType_Imm Bit64))) BEnd_LittleEndian Bit32) (BExp_Const (Imm64 0x101010101010101w))) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x9\" (BType_Imm Bit64))) BEnd_LittleEndian (BExp_Den (BVar \"x10\" (BType_Imm Bit64)))) (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8)))); BStmt_Assign (BVar \"x12\" (BType_Imm Bit64)) (BExp_IfThenElse (BExp_BinPred BIExp_Equal (BExp_Load (BExp_Den (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x9\" (BType_Imm Bit64))) BEnd_LittleEndian Bit32) (BExp_Const (Imm64 0x101010101010101w))) (BExp_Const (Imm64 0w)) (BExp_Const (Imm64 0x101010101010101w))); BStmt_Assign (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8)) (BExp_Den (BVar \"MEM8_Z\" (BType_Mem Bit64 Bit8)))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 12w)))|>; <|bb_label := BL_Address_HC (Imm64 12w) \"00260613 (addi a2,a2,2)\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assign (BVar \"x12\" (BType_Imm Bit64)) (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x12\" (BType_Imm Bit64))) (BExp_Const (Imm64 2w)))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 16w)))|>; <|bb_label := BL_Address_HC (Imm64 16w) \"1009B6AF\"; bb_mc_tags := SOME <|mc_atomic := F; mc_acq := F; mc_rel := F|>; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 3 (BExp_Den (BVar \"x19\" (BType_Imm Bit64)))); BStmt_Assign (BVar \"x13\" (BType_Imm Bit64)) (BExp_Load (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x19\" (BType_Imm Bit64))) BEnd_LittleEndian Bit64); BStmt_Assign (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8_Z\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x19\" (BType_Imm Bit64))) BEnd_LittleEndian (BExp_Const (Imm64 0x101010101010101w)))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 20w)))|>; <|bb_label := BL_Address_HC (Imm64 20w) \"18C9B72F\"; bb_mc_tags := SOME <|mc_atomic := F; mc_acq := F; mc_rel := F|>; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 3 (BExp_Den (BVar \"x19\" (BType_Imm Bit64)))); BStmt_Assert (BExp_unchanged_mem_interval_distinct Bit64 0 1000 (BExp_Den (BVar \"x19\" (BType_Imm Bit64))) 8); BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_IfThenElse (BExp_BinPred BIExp_Equal (BExp_Load (BExp_Den (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x19\" (BType_Imm Bit64))) BEnd_LittleEndian Bit32) (BExp_Const (Imm64 0x101010101010101w))) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x19\" (BType_Imm Bit64))) BEnd_LittleEndian (BExp_Den (BVar \"x12\" (BType_Imm Bit64)))) (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8)))); BStmt_Assign (BVar \"x14\" (BType_Imm Bit64)) (BExp_IfThenElse (BExp_BinPred BIExp_Equal (BExp_Load (BExp_Den (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x19\" (BType_Imm Bit64))) BEnd_LittleEndian Bit32) (BExp_Const (Imm64 0x101010101010101w))) (BExp_Const (Imm64 0w)) (BExp_Const (Imm64 0x101010101010101w))); BStmt_Assign (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8)) (BExp_Den (BVar \"MEM8_Z\" (BType_Mem Bit64 Bit8)))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 24w)))|>; <|bb_label := BL_Address_HC (Imm64 24w) \"00270713 (addi a4,a4,2)\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assign (BVar \"x14\" (BType_Imm Bit64)) (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x14\" (BType_Imm Bit64))) (BExp_Const (Imm64 2w)))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 28w)))|>; <|bb_label := BL_Address_HC (Imm64 28w) \"00E93023 (sd a4,0(s2))\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 3 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x18\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w)))); BStmt_Assert (BExp_unchanged_mem_interval_distinct Bit64 0 1000 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x18\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) 8); BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x18\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) BEnd_LittleEndian (BExp_Den (BVar \"x14\" (BType_Imm Bit64))))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 32w)))|>; <|bb_label := BL_Address_HC (Imm64 32w) \"00000013 (nop)\"; bb_mc_tags := NONE; bb_statements := []; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 36w)))|>]","BirProgram [<|bb_label := BL_Address_HC (Imm64 0w) \"00093683 (ld a3,0(s2))\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 3 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x18\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w)))); BStmt_Assign (BVar \"x13\" (BType_Imm Bit64)) (BExp_Load (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x18\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) BEnd_LittleEndian Bit64)]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 4w)))|>; <|bb_label := BL_Address_HC (Imm64 4w) \"00D43023 (sd a3,0(s0))\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 3 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w)))); BStmt_Assert (BExp_unchanged_mem_interval_distinct Bit64 0 1000 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) 8); BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) BEnd_LittleEndian (BExp_Den (BVar \"x13\" (BType_Imm Bit64))))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 8w)))|>; <|bb_label := BL_Address_HC (Imm64 8w) \"00000013 (nop)\"; bb_mc_tags := NONE; bb_statements := []; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 12w)))|>]"],"final":"EXISTS (λ(M,TS). HD TS \"a0\" = SOME (BVal_Imm (Imm64 2w)) ∧ HD TS \"a4\" = SOME (BVal_Imm (Imm64 2w)) ∧ EL 1 TS \"a3\" = SOME (BVal_Imm (Imm64 2w)) ∧ (HD TS \"a2\" = SOME (BVal_Imm (Imm64 2w)) ∧ M (BVal_Imm (Imm64 a)) = SOME (BVal_Imm (Imm64 2w)) ∧ M (BVal_Imm (Imm64 y)) = SOME (BVal_Imm (Imm64 2w)) ∨ HD TS \"a2\" = SOME (BVal_Imm (Imm64 3w)) ∧ M (BVal_Imm (Imm64 a)) = SOME (BVal_Imm (Imm64 3w)) ∧ M (BVal_Imm (Imm64 y)) = SOME (BVal_Imm (Imm64 0w))) ∨ HD TS \"a0\" = SOME (BVal_Imm (Imm64 3w)) ∧ HD TS \"a4\" = SOME (BVal_Imm (Imm64 3w)) ∧ EL 1 TS \"a3\" = SOME (BVal_Imm (Imm64 3w)) ∧ M (BVal_Imm (Imm64 a)) = SOME (BVal_Imm (Imm64 0w)) ∧ (HD TS \"a2\" = SOME (BVal_Imm (Imm64 2w)) ∧ M (BVal_Imm (Imm64 y)) = SOME (BVal_Imm (Imm64 3w)) ∨ HD TS \"a2\" = SOME (BVal_Imm (Imm64 3w)) ∧ M (BVal_Imm (Imm64 y)) = SOME (BVal_Imm (Imm64 0w))))"}