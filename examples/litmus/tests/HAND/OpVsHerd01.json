{"arch":"RISCV","name":"OpVsHerd01","regs":["(K NONE)⦇\"x15\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x14\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x6\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x13\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x12\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x10\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x9\" ↦ SOME (BVal_Imm (Imm64 y)); \"x19\" ↦ SOME (BVal_Imm (Imm64 b)); \"x18\" ↦ SOME (BVal_Imm (Imm64 a)); \"x8\" ↦ SOME (BVal_Imm (Imm64 x))⦈","(K NONE)⦇\"x10\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x6\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x9\" ↦ SOME (BVal_Imm (Imm64 y)); \"x8\" ↦ SOME (BVal_Imm (Imm64 x))⦈"],"mem":"[]","progs":["BirProgram [<|bb_label := BL_Address_HC (Imm64 0w) \"00100313 (li t1,1)\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assign (BVar \"x6\" (BType_Imm Bit64)) (BExp_Const (Imm64 1w))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 4w)))|>; <|bb_label := BL_Address_HC (Imm64 4w) \"1004252F\"; bb_mc_tags := SOME <|mc_atomic := F; mc_acq := F; mc_rel := F|>; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_Den (BVar \"x8\" (BType_Imm Bit64)))); BStmt_Assign (BVar \"x10\" (BType_Imm Bit64)) (BExp_Cast BIExp_SignedCast (BExp_Load (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) BEnd_LittleEndian Bit32) Bit64); BStmt_Assign (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8_Z\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) BEnd_LittleEndian (BExp_Const (Imm32 0x1010101w)))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 8w)))|>; <|bb_label := BL_Address_HC (Imm64 8w) \"1864262F\"; bb_mc_tags := SOME <|mc_atomic := F; mc_acq := F; mc_rel := F|>; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_Den (BVar \"x8\" (BType_Imm Bit64)))); BStmt_Assert (BExp_unchanged_mem_interval_distinct Bit64 0 1000 (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) 4); BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_IfThenElse (BExp_BinPred BIExp_Equal (BExp_Load (BExp_Den (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) BEnd_LittleEndian Bit64) (BExp_Const (Imm32 0x1010101w))) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) BEnd_LittleEndian (BExp_Cast BIExp_LowCast (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) Bit32)) (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8)))); BStmt_Assign (BVar \"x12\" (BType_Imm Bit64)) (BExp_IfThenElse (BExp_BinPred BIExp_Equal (BExp_Load (BExp_Den (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) BEnd_LittleEndian Bit64) (BExp_Const (Imm32 0x1010101w))) (BExp_Const (Imm64 0w)) (BExp_Const (Imm64 0x101010101010101w))); BStmt_Assign (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8)) (BExp_Den (BVar \"MEM8_Z\" (BType_Mem Bit64 Bit8)))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 12w)))|>; <|bb_label := BL_Address_HC (Imm64 12w) \"00C646B3 (xor a3,a2,a2)\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assign (BVar \"x13\" (BType_Imm Bit64)) (BExp_BinExp BIExp_Xor (BExp_Den (BVar \"x12\" (BType_Imm Bit64))) (BExp_Den (BVar \"x12\" (BType_Imm Bit64))))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 16w)))|>; <|bb_label := BL_Address_HC (Imm64 16w) \"00D90933 (add s2,s2,a3)\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assign (BVar \"x18\" (BType_Imm Bit64)) (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x18\" (BType_Imm Bit64))) (BExp_Den (BVar \"x13\" (BType_Imm Bit64))))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 20w)))|>; <|bb_label := BL_Address_HC (Imm64 20w) \"00692023 (sw t1,0(s2))\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x18\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w)))); BStmt_Assert (BExp_unchanged_mem_interval_distinct Bit64 0 1000 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x18\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) 4); BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x18\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) BEnd_LittleEndian (BExp_Cast BIExp_LowCast (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) Bit32))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 24w)))|>; <|bb_label := BL_Address_HC (Imm64 24w) \"0009A703 (lw a4,0(s3))\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x19\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w)))); BStmt_Assign (BVar \"x14\" (BType_Imm Bit64)) (BExp_Cast BIExp_SignedCast (BExp_Load (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x19\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) BEnd_LittleEndian Bit32) Bit64)]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 28w)))|>; <|bb_label := BL_Address_HC (Imm64 28w) \"0220000F\"; bb_mc_tags := SOME <|mc_atomic := F; mc_acq := F; mc_rel := F|>; bb_statements := [BStmt_Fence BM_Read BM_Read]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 32w)))|>; <|bb_label := BL_Address_HC (Imm64 32w) \"0004A783 (lw a5,0(s1))\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x9\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w)))); BStmt_Assign (BVar \"x15\" (BType_Imm Bit64)) (BExp_Cast BIExp_SignedCast (BExp_Load (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x9\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) BEnd_LittleEndian Bit32) Bit64)]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 36w)))|>; <|bb_label := BL_Address_HC (Imm64 36w) \"00000013 (nop)\"; bb_mc_tags := NONE; bb_statements := []; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 40w)))|>]","BirProgram [<|bb_label := BL_Address_HC (Imm64 0w) \"00100313 (li t1,1)\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assign (BVar \"x6\" (BType_Imm Bit64)) (BExp_Const (Imm64 1w))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 4w)))|>; <|bb_label := BL_Address_HC (Imm64 4w) \"0064A023 (sw t1,0(s1))\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x9\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w)))); BStmt_Assert (BExp_unchanged_mem_interval_distinct Bit64 0 1000 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x9\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) 4); BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x9\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) BEnd_LittleEndian (BExp_Cast BIExp_LowCast (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) Bit32))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 8w)))|>; <|bb_label := BL_Address_HC (Imm64 8w) \"0330000F\"; bb_mc_tags := SOME <|mc_atomic := F; mc_acq := F; mc_rel := F|>; bb_statements := [BStmt_Fence BM_ReadWrite BM_ReadWrite]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 12w)))|>; <|bb_label := BL_Address_HC (Imm64 12w) \"00042503 (lw a0,0(s0))\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w)))); BStmt_Assign (BVar \"x10\" (BType_Imm Bit64)) (BExp_Cast BIExp_SignedCast (BExp_Load (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) BEnd_LittleEndian Bit32) Bit64)]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 16w)))|>; <|bb_label := BL_Address_HC (Imm64 16w) \"00000013 (nop)\"; bb_mc_tags := NONE; bb_statements := []; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 20w)))|>]"],"final":"EXISTS (λ(M,TS). HD TS \"a5\" = SOME (BVal_Imm (Imm64 0w)) ∧ EL 1 TS \"a0\" = SOME (BVal_Imm (Imm64 0w)) ∧ HD TS \"a2\" = SOME (BVal_Imm (Imm64 0w)))"}