{"arch":"RISCV","name":"Luc01+BIS","regs":["(K NONE)⦇\"tmp\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x1\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x5\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x6\" ↦ SOME (BVal_Imm (Imm64 x))⦈","(K NONE)⦇\"tmp\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x9\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x7\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x5\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x8\" ↦ SOME (BVal_Imm (Imm64 y)); \"x6\" ↦ SOME (BVal_Imm (Imm64 x)); \"x1\" ↦ SOME (BVal_Imm (Imm64 0w))⦈","(K NONE)⦇\"tmp\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x2\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x7\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x1\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x5\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x8\" ↦ SOME (BVal_Imm (Imm64 x)); \"x6\" ↦ SOME (BVal_Imm (Imm64 y))⦈"],"mem":"[]","progs":["BirProgram [<|bb_label := BL_Address_HC (Imm64 0w) \"00206293 (ori t0,zero,2)\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assign (BVar \"x5\" (BType_Imm Bit64)) (BExp_Const (Imm64 2w))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 4w)))|>; <|bb_label := BL_Address_HC (Imm64 4w) \"0E5320AF\"; bb_mc_tags := SOME <|mc_atomic := T; mc_acq := T; mc_rel := T|>; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_Den (BVar \"x6\" (BType_Imm Bit64)))); BStmt_Assert (BExp_unchanged_mem_interval_distinct Bit64 0 1000 (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) 4); BStmt_Assign (BVar \"tmp\" (BType_Imm Bit64)) (BExp_Cast BIExp_SignedCast (BExp_Load (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) BEnd_LittleEndian Bit32) Bit64); BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) BEnd_LittleEndian (BExp_Cast BIExp_LowCast (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) Bit32)); BStmt_Assign (BVar \"x1\" (BType_Imm Bit64)) (BExp_Den (BVar \"tmp\" (BType_Imm Bit64)))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 8w)))|>; <|bb_label := BL_Address_HC (Imm64 8w) \"00000013 (nop)\"; bb_mc_tags := NONE; bb_statements := []; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 12w)))|>]","BirProgram [<|bb_label := BL_Address_HC (Imm64 0w) \"461322AF\"; bb_mc_tags := SOME <|mc_atomic := T; mc_acq := T; mc_rel := T|>; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_Den (BVar \"x6\" (BType_Imm Bit64)))); BStmt_Assert (BExp_unchanged_mem_interval_distinct Bit64 0 1000 (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) 4); BStmt_Assign (BVar \"tmp\" (BType_Imm Bit64)) (BExp_Cast BIExp_SignedCast (BExp_Load (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) BEnd_LittleEndian Bit32) Bit64); BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) BEnd_LittleEndian (BExp_Cast BIExp_LowCast (BExp_BinExp BIExp_Or (BExp_Den (BVar \"tmp\" (BType_Imm Bit64))) (BExp_Den (BVar \"x1\" (BType_Imm Bit64)))) Bit32)); BStmt_Assign (BVar \"x5\" (BType_Imm Bit64)) (BExp_Den (BVar \"tmp\" (BType_Imm Bit64)))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 4w)))|>; <|bb_label := BL_Address_HC (Imm64 4w) \"00106393 (ori t2,zero,1)\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assign (BVar \"x7\" (BType_Imm Bit64)) (BExp_Const (Imm64 1w))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 8w)))|>; <|bb_label := BL_Address_HC (Imm64 8w) \"00742023 (sw t2,0(s0))\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w)))); BStmt_Assert (BExp_unchanged_mem_interval_distinct Bit64 0 1000 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) 4); BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) BEnd_LittleEndian (BExp_Cast BIExp_LowCast (BExp_Den (BVar \"x7\" (BType_Imm Bit64))) Bit32))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 12w)))|>; <|bb_label := BL_Address_HC (Imm64 12w) \"461424AF\"; bb_mc_tags := SOME <|mc_atomic := T; mc_acq := T; mc_rel := T|>; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_Den (BVar \"x8\" (BType_Imm Bit64)))); BStmt_Assert (BExp_unchanged_mem_interval_distinct Bit64 0 1000 (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) 4); BStmt_Assign (BVar \"tmp\" (BType_Imm Bit64)) (BExp_Cast BIExp_SignedCast (BExp_Load (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) BEnd_LittleEndian Bit32) Bit64); BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) BEnd_LittleEndian (BExp_Cast BIExp_LowCast (BExp_BinExp BIExp_Or (BExp_Den (BVar \"tmp\" (BType_Imm Bit64))) (BExp_Den (BVar \"x1\" (BType_Imm Bit64)))) Bit32)); BStmt_Assign (BVar \"x9\" (BType_Imm Bit64)) (BExp_Den (BVar \"tmp\" (BType_Imm Bit64)))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 16w)))|>; <|bb_label := BL_Address_HC (Imm64 16w) \"00000013 (nop)\"; bb_mc_tags := NONE; bb_statements := []; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 20w)))|>]","BirProgram [<|bb_label := BL_Address_HC (Imm64 0w) \"00206293 (ori t0,zero,2)\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assign (BVar \"x5\" (BType_Imm Bit64)) (BExp_Const (Imm64 2w))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 4w)))|>; <|bb_label := BL_Address_HC (Imm64 4w) \"0E5320AF\"; bb_mc_tags := SOME <|mc_atomic := T; mc_acq := T; mc_rel := T|>; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_Den (BVar \"x6\" (BType_Imm Bit64)))); BStmt_Assert (BExp_unchanged_mem_interval_distinct Bit64 0 1000 (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) 4); BStmt_Assign (BVar \"tmp\" (BType_Imm Bit64)) (BExp_Cast BIExp_SignedCast (BExp_Load (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) BEnd_LittleEndian Bit32) Bit64); BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) BEnd_LittleEndian (BExp_Cast BIExp_LowCast (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) Bit32)); BStmt_Assign (BVar \"x1\" (BType_Imm Bit64)) (BExp_Den (BVar \"tmp\" (BType_Imm Bit64)))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 8w)))|>; <|bb_label := BL_Address_HC (Imm64 8w) \"00106393 (ori t2,zero,1)\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assign (BVar \"x7\" (BType_Imm Bit64)) (BExp_Const (Imm64 1w))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 12w)))|>; <|bb_label := BL_Address_HC (Imm64 12w) \"0E74212F\"; bb_mc_tags := SOME <|mc_atomic := T; mc_acq := T; mc_rel := T|>; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_Den (BVar \"x8\" (BType_Imm Bit64)))); BStmt_Assert (BExp_unchanged_mem_interval_distinct Bit64 0 1000 (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) 4); BStmt_Assign (BVar \"tmp\" (BType_Imm Bit64)) (BExp_Cast BIExp_SignedCast (BExp_Load (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) BEnd_LittleEndian Bit32) Bit64); BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) BEnd_LittleEndian (BExp_Cast BIExp_LowCast (BExp_Den (BVar \"x7\" (BType_Imm Bit64))) Bit32)); BStmt_Assign (BVar \"x2\" (BType_Imm Bit64)) (BExp_Den (BVar \"tmp\" (BType_Imm Bit64)))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 16w)))|>; <|bb_label := BL_Address_HC (Imm64 16w) \"00000013 (nop)\"; bb_mc_tags := NONE; bb_statements := []; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 20w)))|>]"],"final":"EXISTS (λ(M,TS). M (BVal_Imm (Imm64 x)) = SOME (BVal_Imm (Imm32 2w)) ∧ M (BVal_Imm (Imm64 y)) = SOME (BVal_Imm (Imm32 2w)) ∧ EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 2w)) ∧ EL 1 TS \"x9\" = SOME (BVal_Imm (Imm64 1w)))"}