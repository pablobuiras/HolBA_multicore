{"arch":"RISCV","name":"S+fence.tso+fence.tsoxx","regs":["(K NONE)⦇\"x8\" ↦ SOME (BVal_Imm (Imm64 y)); \"x7\" ↦ SOME (BVal_Imm (Imm64 1w)); \"x6\" ↦ SOME (BVal_Imm (Imm64 x)); \"x5\" ↦ SOME (BVal_Imm (Imm64 2w))⦈","(K NONE)⦇\"x11\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x10\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x7\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x6\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x9\" ↦ SOME (BVal_Imm (Imm64 1w)); \"x8\" ↦ SOME (BVal_Imm (Imm64 x)); \"x5\" ↦ SOME (BVal_Imm (Imm64 y))⦈"],"progs":["BirProgram [<|bb_label := BL_Address_HC (Imm64 0w) \"00532023 (sw t0,0(t1))\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w)))); BStmt_Assert (BExp_unchanged_mem_interval_distinct Bit64 0 1000 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) 4); BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) BEnd_LittleEndian (BExp_Cast BIExp_LowCast (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) Bit32))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 4w)))|>; <|bb_label := BL_Address_HC (Imm64 4w) \"8330000F\"; bb_mc_tags := SOME <|mc_atomic := F; mc_acq := F; mc_rel := F|>; bb_statements := [BStmt_Fence BM_Read BM_Read; BStmt_Fence BM_ReadWrite BM_Write]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 8w)))|>; <|bb_label := BL_Address_HC (Imm64 8w) \"00742023 (sw t2,0(s0))\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w)))); BStmt_Assert (BExp_unchanged_mem_interval_distinct Bit64 0 1000 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) 4); BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) BEnd_LittleEndian (BExp_Cast BIExp_LowCast (BExp_Den (BVar \"x7\" (BType_Imm Bit64))) Bit32))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 12w)))|>; <|bb_label := BL_Address_HC (Imm64 12w) \"00000013 (nop)\"; bb_mc_tags := NONE; bb_statements := []; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 16w)))|>]","BirProgram [<|bb_label := BL_Address_HC (Imm64 0w) \"1002A32F\"; bb_mc_tags := SOME <|mc_atomic := F; mc_acq := F; mc_rel := F|>; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_Den (BVar \"x5\" (BType_Imm Bit64)))); BStmt_Assign (BVar \"x6\" (BType_Imm Bit64)) (BExp_Cast BIExp_SignedCast (BExp_Load (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) BEnd_LittleEndian Bit32) Bit64); BStmt_Assign (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8_Z\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) BEnd_LittleEndian (BExp_Const (Imm32 0x1010101w)))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 4w)))|>; <|bb_label := BL_Address_HC (Imm64 4w) \"1862A3AF\"; bb_mc_tags := SOME <|mc_atomic := F; mc_acq := F; mc_rel := F|>; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_Den (BVar \"x5\" (BType_Imm Bit64)))); BStmt_Assert (BExp_unchanged_mem_interval_distinct Bit64 0 1000 (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) 4); BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_IfThenElse (BExp_BinPred BIExp_Equal (BExp_Load (BExp_Den (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) BEnd_LittleEndian Bit64) (BExp_Const (Imm32 0x1010101w))) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) BEnd_LittleEndian (BExp_Cast BIExp_LowCast (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) Bit32)) (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8)))); BStmt_Assign (BVar \"x7\" (BType_Imm Bit64)) (BExp_IfThenElse (BExp_BinPred BIExp_Equal (BExp_Load (BExp_Den (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) BEnd_LittleEndian Bit64) (BExp_Const (Imm32 0x1010101w))) (BExp_Const (Imm64 0w)) (BExp_Const (Imm64 0x101010101010101w))); BStmt_Assign (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8)) (BExp_Den (BVar \"MEM8_Z\" (BType_Mem Bit64 Bit8)))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 8w)))|>; <|bb_label := BL_Address_HC (Imm64 8w) \"8330000F\"; bb_mc_tags := SOME <|mc_atomic := F; mc_acq := F; mc_rel := F|>; bb_statements := [BStmt_Fence BM_Read BM_Read; BStmt_Fence BM_ReadWrite BM_Write]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 12w)))|>; <|bb_label := BL_Address_HC (Imm64 12w) \"1004252F\"; bb_mc_tags := SOME <|mc_atomic := F; mc_acq := F; mc_rel := F|>; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_Den (BVar \"x8\" (BType_Imm Bit64)))); BStmt_Assign (BVar \"x10\" (BType_Imm Bit64)) (BExp_Cast BIExp_SignedCast (BExp_Load (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) BEnd_LittleEndian Bit32) Bit64); BStmt_Assign (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8_Z\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) BEnd_LittleEndian (BExp_Const (Imm32 0x1010101w)))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 16w)))|>; <|bb_label := BL_Address_HC (Imm64 16w) \"189425AF\"; bb_mc_tags := SOME <|mc_atomic := F; mc_acq := F; mc_rel := F|>; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_Den (BVar \"x8\" (BType_Imm Bit64)))); BStmt_Assert (BExp_unchanged_mem_interval_distinct Bit64 0 1000 (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) 4); BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_IfThenElse (BExp_BinPred BIExp_Equal (BExp_Load (BExp_Den (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) BEnd_LittleEndian Bit64) (BExp_Const (Imm32 0x1010101w))) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) BEnd_LittleEndian (BExp_Cast BIExp_LowCast (BExp_Den (BVar \"x9\" (BType_Imm Bit64))) Bit32)) (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8)))); BStmt_Assign (BVar \"x11\" (BType_Imm Bit64)) (BExp_IfThenElse (BExp_BinPred BIExp_Equal (BExp_Load (BExp_Den (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x8\" (BType_Imm Bit64))) BEnd_LittleEndian Bit64) (BExp_Const (Imm32 0x1010101w))) (BExp_Const (Imm64 0w)) (BExp_Const (Imm64 0x101010101010101w))); BStmt_Assign (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8)) (BExp_Den (BVar \"MEM8_Z\" (BType_Mem Bit64 Bit8)))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 20w)))|>; <|bb_label := BL_Address_HC (Imm64 20w) \"00000013 (nop)\"; bb_mc_tags := NONE; bb_statements := []; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 24w)))|>]"],"final":"EXISTS (λ(M,TS). M (BVal_Imm (Imm64 x)) = SOME (BVal_Imm (Imm32 2w)) ∧ M (BVal_Imm (Imm64 y)) = SOME (BVal_Imm (Imm32 1w)) ∧ EL 1 TS \"x11\" = SOME (BVal_Imm (Imm64 0w)) ∧ EL 1 TS \"x7\" = SOME (BVal_Imm (Imm64 0w)) ∧ EL 1 TS \"x6\" = SOME (BVal_Imm (Imm64 1w)) ∧ EL 1 TS \"x10\" = SOME (BVal_Imm (Imm64 0w)))"}