{"arch":"RISCV","name":"WRW+WR+fence.rw.rws+fence.rw.rwsxp","regs":["(K NONE)⦇\"x6\" ↦ SOME (BVal_Imm (Imm64 x)); \"x5\" ↦ SOME (BVal_Imm (Imm64 1w))⦈","(K NONE)⦇\"x5\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x7\" ↦ SOME (BVal_Imm (Imm64 2w)); \"x6\" ↦ SOME (BVal_Imm (Imm64 x))⦈","(K NONE)⦇\"x9\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x8\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x7\" ↦ SOME (BVal_Imm (Imm64 0w)); \"x6\" ↦ SOME (BVal_Imm (Imm64 3w)); \"x5\" ↦ SOME (BVal_Imm (Imm64 x))⦈"],"progs":["BirProgram [<|bb_label := BL_Address_HC (Imm64 0w) \"00532023 (sw t0,0(t1))\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w)))); BStmt_Assert (BExp_unchanged_mem_interval_distinct Bit64 0 1000 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) 4); BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) BEnd_LittleEndian (BExp_Cast BIExp_LowCast (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) Bit32))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 4w)))|>; <|bb_label := BL_Address_HC (Imm64 4w) \"00000013 (nop)\"; bb_mc_tags := NONE; bb_statements := []; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 8w)))|>]","BirProgram [<|bb_label := BL_Address_HC (Imm64 0w) \"00032283 (lw t0,0(t1))\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w)))); BStmt_Assign (BVar \"x5\" (BType_Imm Bit64)) (BExp_Cast BIExp_SignedCast (BExp_Load (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) BEnd_LittleEndian Bit32) Bit64)]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 4w)))|>; <|bb_label := BL_Address_HC (Imm64 4w) \"0330000F\"; bb_mc_tags := SOME <|mc_atomic := F; mc_acq := F; mc_rel := F|>; bb_statements := [BStmt_Fence BM_ReadWrite BM_ReadWrite]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 8w)))|>; <|bb_label := BL_Address_HC (Imm64 8w) \"00732023 (sw t2,0(t1))\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w)))); BStmt_Assert (BExp_unchanged_mem_interval_distinct Bit64 0 1000 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) 4); BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) BEnd_LittleEndian (BExp_Cast BIExp_LowCast (BExp_Den (BVar \"x7\" (BType_Imm Bit64))) Bit32))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 12w)))|>; <|bb_label := BL_Address_HC (Imm64 12w) \"00000013 (nop)\"; bb_mc_tags := NONE; bb_statements := []; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 16w)))|>]","BirProgram [<|bb_label := BL_Address_HC (Imm64 0w) \"1002A3AF\"; bb_mc_tags := SOME <|mc_atomic := F; mc_acq := F; mc_rel := F|>; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_Den (BVar \"x5\" (BType_Imm Bit64)))); BStmt_Assign (BVar \"x7\" (BType_Imm Bit64)) (BExp_Cast BIExp_SignedCast (BExp_Load (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) BEnd_LittleEndian Bit32) Bit64); BStmt_Assign (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8)) (BExp_Store (BExp_Den (BVar \"MEM8_Z\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) BEnd_LittleEndian (BExp_Const (Imm32 0x1010101w)))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 4w)))|>; <|bb_label := BL_Address_HC (Imm64 4w) \"1862A42F\"; bb_mc_tags := SOME <|mc_atomic := F; mc_acq := F; mc_rel := F|>; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_Den (BVar \"x5\" (BType_Imm Bit64)))); BStmt_Assert (BExp_unchanged_mem_interval_distinct Bit64 0 1000 (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) 4); BStmt_Assign (BVar \"MEM8\" (BType_Mem Bit64 Bit8)) (BExp_IfThenElse (BExp_BinPred BIExp_Equal (BExp_Load (BExp_Den (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) BEnd_LittleEndian Bit64) (BExp_Const (Imm32 0x1010101w))) (BExp_Store (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) BEnd_LittleEndian (BExp_Cast BIExp_LowCast (BExp_Den (BVar \"x6\" (BType_Imm Bit64))) Bit32)) (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8)))); BStmt_Assign (BVar \"x8\" (BType_Imm Bit64)) (BExp_IfThenElse (BExp_BinPred BIExp_Equal (BExp_Load (BExp_Den (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8))) (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) BEnd_LittleEndian Bit64) (BExp_Const (Imm32 0x1010101w))) (BExp_Const (Imm64 0w)) (BExp_Const (Imm64 0x101010101010101w))); BStmt_Assign (BVar \"MEM8_R\" (BType_Mem Bit64 Bit8)) (BExp_Den (BVar \"MEM8_Z\" (BType_Mem Bit64 Bit8)))]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 8w)))|>; <|bb_label := BL_Address_HC (Imm64 8w) \"0330000F\"; bb_mc_tags := SOME <|mc_atomic := F; mc_acq := F; mc_rel := F|>; bb_statements := [BStmt_Fence BM_ReadWrite BM_ReadWrite]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 12w)))|>; <|bb_label := BL_Address_HC (Imm64 12w) \"0002A483 (lw s1,0(t0))\"; bb_mc_tags := NONE; bb_statements := [BStmt_Assert (BExp_Aligned Bit64 2 (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w)))); BStmt_Assign (BVar \"x9\" (BType_Imm Bit64)) (BExp_Cast BIExp_SignedCast (BExp_Load (BExp_Den (BVar \"MEM8\" (BType_Mem Bit64 Bit8))) (BExp_BinExp BIExp_Plus (BExp_Den (BVar \"x5\" (BType_Imm Bit64))) (BExp_Const (Imm64 0w))) BEnd_LittleEndian Bit32) Bit64)]; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 16w)))|>; <|bb_label := BL_Address_HC (Imm64 16w) \"00000013 (nop)\"; bb_mc_tags := NONE; bb_statements := []; bb_last_statement := BStmt_Jmp (BLE_Label (BL_Address (Imm64 20w)))|>]"],"final":"EXISTS (λ(M,TS). ¬(M (BVal_Imm (Imm64 x)) = SOME (BVal_Imm (Imm32 2w)) ∧ (EL 2 TS \"x7\" = SOME (BVal_Imm (Imm64 0w)) ∧ (EL 2 TS \"x8\" = SOME (BVal_Imm (Imm64 0w)) ∧ (EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 0w)) ∧ (EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 1w)) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 2w)) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 3w))) ∨ EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 1w)) ∧ (EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 3w)) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 2w)) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 1w))) ∨ EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 3w)) ∧ (EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 1w)) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 2w)) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 3w)))) ∨ EL 2 TS \"x8\" = SOME (BVal_Imm (Imm64 1w)) ∧ (EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 0w)) ∧ (EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 2w)) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 1w)) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 0w))) ∨ EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 1w)) ∧ (EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 0w)) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 1w)) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 2w))))) ∨ EL 2 TS \"x7\" = SOME (BVal_Imm (Imm64 1w)) ∧ (EL 2 TS \"x8\" = SOME (BVal_Imm (Imm64 0w)) ∧ (EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 2w)) ∧ (EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 3w)) ∨ EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 1w)) ∨ EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 0w))) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 3w)) ∧ (EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 0w)) ∨ EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 1w)) ∨ EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 3w)))) ∨ EL 2 TS \"x8\" = SOME (BVal_Imm (Imm64 1w)) ∧ (EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 0w)) ∧ (EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 1w)) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 2w))) ∨ EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 1w)) ∧ (EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 2w)) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 1w))))) ∨ EL 2 TS \"x7\" = SOME (BVal_Imm (Imm64 2w)) ∧ EL 2 TS \"x8\" = SOME (BVal_Imm (Imm64 1w)) ∧ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 2w)) ∧ (EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 0w)) ∨ EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 1w)))) ∨ M (BVal_Imm (Imm64 x)) = SOME (BVal_Imm (Imm32 1w)) ∧ (EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 0w)) ∧ (EL 2 TS \"x7\" = SOME (BVal_Imm (Imm64 0w)) ∧ (EL 2 TS \"x8\" = SOME (BVal_Imm (Imm64 0w)) ∧ (EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 3w)) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 2w)) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 1w))) ∨ EL 2 TS \"x8\" = SOME (BVal_Imm (Imm64 1w)) ∧ (EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 0w)) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 1w)) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 2w)))) ∨ EL 2 TS \"x7\" = SOME (BVal_Imm (Imm64 2w)) ∧ (EL 2 TS \"x8\" = SOME (BVal_Imm (Imm64 0w)) ∧ (EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 1w)) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 3w))) ∨ EL 2 TS \"x8\" = SOME (BVal_Imm (Imm64 1w)) ∧ (EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 2w)) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 1w)))) ∨ EL 2 TS \"x7\" = SOME (BVal_Imm (Imm64 1w)) ∧ EL 2 TS \"x8\" = SOME (BVal_Imm (Imm64 1w)) ∧ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 1w))) ∨ EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 3w)) ∧ EL 2 TS \"x7\" = SOME (BVal_Imm (Imm64 0w)) ∧ EL 2 TS \"x8\" = SOME (BVal_Imm (Imm64 0w)) ∧ (EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 1w)) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 2w)) ∨ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 3w)))) ∨ EL 2 TS \"x8\" = SOME (BVal_Imm (Imm64 0w)) ∧ EL 2 TS \"x9\" = SOME (BVal_Imm (Imm64 3w)) ∧ M (BVal_Imm (Imm64 x)) = SOME (BVal_Imm (Imm32 3w)) ∧ (EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 0w)) ∧ (EL 2 TS \"x7\" = SOME (BVal_Imm (Imm64 1w)) ∨ EL 2 TS \"x7\" = SOME (BVal_Imm (Imm64 2w))) ∨ EL 1 TS \"x5\" = SOME (BVal_Imm (Imm64 1w)) ∧ EL 2 TS \"x7\" = SOME (BVal_Imm (Imm64 2w)))))"}